version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0.5-jammy
    container_name: employee_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: employee_management
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - employee_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Employee Management Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employee_app
    restart: unless-stopped
    ports:
      - "3000:5000"  # External port 3000 maps to internal port 5000
    environment:
      NODE_ENV: production
      PORT: 5000
      HOST: 0.0.0.0
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/employee_management?authSource=admin
      JWT_SECRET: super-long-random-jwt-secret-key-for-employee-management-production-2024
      JWT_EXPIRES_IN: 30d
      CLIENT_URL: http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - employee_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local

networks:
  employee_network:
    driver: bridge